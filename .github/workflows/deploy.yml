name: Deploy to production

on:
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: demo
  EKS_CLUSTER_NAME: Kubernetes-demo
  AWS_REGION: ap-southeast-1

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2

    # - name: Install kubectl
    #   uses: azure/setup-kubectl@v1
    #   with:
    #     version: 'v1.21.3'
    #   id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Load secrets and save to app.env
      run: aws secretsmanager get-secret-value --secret-id simplebank_env --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" eks/deployment.yaml && \
        kubectl apply -f eks/deployment.yaml
        kubectl apply -f eks/service.yaml

    # - name: Deploy image to Amazon EKS
    #   run: |
    #     kubectl apply -f eks/aws-auth.yaml
    #     kubectl apply -f eks/deployment.yaml
    #     kubectl apply -f eks/service.yaml
    #     kubectl apply -f eks/issuer.yaml
    #     kubectl apply -f eks/ingress-nginx.yaml
    #     kubectl apply -f eks/ingress-http.yaml
    #     kubectl apply -f eks/ingress-grpc.yaml